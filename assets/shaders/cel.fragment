#version 430 core

// in
layout (location = 0) in vec3 position_fs;
layout (location = 1) in vec3 normal_fs;
layout (location = 2) in vec2 texture_coordinates_fs;

layout (location = 9)  uniform vec4 light_position; // in world coordinates, methinks.
layout (location = 10) uniform vec3 light_color;
layout (location = 11) uniform vec4 material; // , x = kd, y = ks, z = n, w = ka



// out
layout (location = 0) out vec4 fColor;

void main()
{
  	
  	vec3 world_position_light = light_position.xyz;

    vec3 N = normalize(normal_in);
    vec3 L = normalize(world_position_light.xyz - position_fs);
    vec3 R = normalize(reflect(L, N));

    vec3 V = normalize(position_fs - vec3(0.0,0.0,0.0));

    vec3 material_color = vec3(100.0f/255.0f, 149.0f/255.0f, 237/255.0f);

    vec3 i_A =  material_color * material.x;
    vec3 i_D = max(0, dot(N, L)) * material_color * material.y;
    vec3 i_S = pow(max(0, dot(R, V)), material.w) * light_color * material.z;

    fColor = i_A + i_D + i_S;
}
